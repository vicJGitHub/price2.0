<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hywa.pricepublish.dao.mapper.PriceCollectionMapper" >
  <resultMap id="BaseResultMap" type="com.hywa.pricepublish.dao.entity.PriceCollection" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="CHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="CHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="market_id" property="marketId" jdbcType="CHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="price_type" property="priceType" jdbcType="CHAR" />
    <result column="history_id" property="historyId" jdbcType="CHAR" />
    <result column="dataOrigion" property="dataorigion" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, create_time, update_time, create_user, description, product_id, price, 
    market_id, unit, price_type, history_id, dataOrigion
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hywa.pricepublish.dao.entity.PriceCollectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from price_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from price_collection
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from price_collection
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hywa.pricepublish.dao.entity.PriceCollectionExample" >
    delete from price_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hywa.pricepublish.dao.entity.PriceCollection" >
    insert into price_collection (id, name, create_time, 
      update_time, create_user, description, 
      product_id, price, market_id, 
      unit, price_type, history_id, 
      dataOrigion)
    values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{productId,jdbcType=CHAR}, #{price,jdbcType=DECIMAL}, #{marketId,jdbcType=CHAR}, 
      #{unit,jdbcType=VARCHAR}, #{priceType,jdbcType=CHAR}, #{historyId,jdbcType=CHAR}, 
      #{dataorigion,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hywa.pricepublish.dao.entity.PriceCollection" >
    insert into price_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="marketId != null" >
        market_id,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="priceType != null" >
        price_type,
      </if>
      <if test="historyId != null" >
        history_id,
      </if>
      <if test="dataorigion != null" >
        dataOrigion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=CHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="marketId != null" >
        #{marketId,jdbcType=CHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="priceType != null" >
        #{priceType,jdbcType=CHAR},
      </if>
      <if test="historyId != null" >
        #{historyId,jdbcType=CHAR},
      </if>
      <if test="dataorigion != null" >
        #{dataorigion,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hywa.pricepublish.dao.entity.PriceCollectionExample" resultType="java.lang.Integer" >
    select count(*) from price_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <select id="calculateTodayAveragePriceByPriceTypeAndCounty"
    resultType="com.hywa.pricepublish.dao.entity.PriceCollection">
    select p.product_id, avg(p.price) price,p.unit,p.market_id
    from price_collection p
    where to_days(create_time) = to_days(now())
    group by product_id,market_id;
  </select>
  <select id="calculateAveragePriceByPriceTypeAndCounty"
    resultType="com.hywa.pricepublish.dao.entity.PriceCollection">
    select p.product_id, avg(p.price) price,p.unit,DATE_FORMAT(p.create_time,'%Y-%m-%d') create_time
    from price_collection p
    where market_id
    in (select id from market where countyId = #{countyId} and price_type =  #{priceTypeId})
    group by product_id,create_time;
  </select>
  <select id="calculateTodayMarketAveragePrice"
    resultType="com.hywa.pricepublish.dao.entity.PriceCollection">
    select p.product_id, avg(p.price) price,p.unit,p.market_id
    from price_collection p
     where to_days(p.create_time) = to_days(now())
    group by product_id,market_id
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update price_collection
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=CHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=CHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.marketId != null" >
        market_id = #{record.marketId,jdbcType=CHAR},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.priceType != null" >
        price_type = #{record.priceType,jdbcType=CHAR},
      </if>
      <if test="record.historyId != null" >
        history_id = #{record.historyId,jdbcType=CHAR},
      </if>
      <if test="record.dataorigion != null" >
        dataOrigion = #{record.dataorigion,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update price_collection
    set id = #{record.id,jdbcType=CHAR},
      name = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=CHAR},
      description = #{record.description,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=CHAR},
      price = #{record.price,jdbcType=DECIMAL},
      market_id = #{record.marketId,jdbcType=CHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      price_type = #{record.priceType,jdbcType=CHAR},
      history_id = #{record.historyId,jdbcType=CHAR},
      dataOrigion = #{record.dataorigion,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hywa.pricepublish.dao.entity.PriceCollection" >
    update price_collection
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=CHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="marketId != null" >
        market_id = #{marketId,jdbcType=CHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="priceType != null" >
        price_type = #{priceType,jdbcType=CHAR},
      </if>
      <if test="historyId != null" >
        history_id = #{historyId,jdbcType=CHAR},
      </if>
      <if test="dataorigion != null" >
        dataOrigion = #{dataorigion,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hywa.pricepublish.dao.entity.PriceCollection" >
    update price_collection
    set name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=CHAR},
      price = #{price,jdbcType=DECIMAL},
      market_id = #{marketId,jdbcType=CHAR},
      unit = #{unit,jdbcType=VARCHAR},
      price_type = #{priceType,jdbcType=CHAR},
      history_id = #{historyId,jdbcType=CHAR},
      dataOrigion = #{dataorigion,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <delete id="deleteById">
    delete from price_collection where id = #{collectId}
  </delete>
  <select id="findCollectIds" resultType="java.lang.String">
    select id
    from price_collection
    where history_id = #{historyId}
  </select>
  <insert id="insertBatchByExcelInfo">
    INSERT into price_collection
    (id,create_time,create_user,market_id,update_time,product_id,price,unit,dataOrigion)
    values
    <foreach collection="list" item="priceCollection" separator=",">
      (#{priceCollection.id},#{priceCollection.createTime},#{priceCollection.createUser},
      (SELECT market.id FROM market
      LEFT JOIN
      province
      ON
      market.provinceId=province.id
      LEFT JOIN
      city
      ON
      market.cityId=city.id
      LEFT JOIN
      county
      ON
      market.countyId=county.id
      WHERE market.NAME=#{priceCollection.marketName}
      <if test="priceCollection.province != null and priceCollection.province !='' ">
        AND province.name = #{priceCollection.province,jdbcType=CHAR}
      </if>
      <if test="priceCollection.city != null and priceCollection.city !='' ">
        AND city.name = #{priceCollection.city,jdbcType=CHAR}
      </if>
      <if test="priceCollection.county != null and priceCollection.county !='' ">
        AND county.name = #{priceCollection.county,jdbcType=CHAR}
      </if>
      ),
      #{priceCollection.collctionTime},
      (SELECT id FROM product_info WHERE NAME=#{priceCollection.name}),
      #{priceCollection.price},#{priceCollection.unit},#{priceCollection.dataOrigion})
    </foreach>
  </insert>
  <insert id="insertBatch">
    INSERT into price_collection
    (id,create_time,create_user,market_id,update_time,product_id,price,history_id,unit)
    values
    <foreach collection="list" item="priceCollection" separator=",">
      (#{priceCollection.id}, #{priceCollection.createTime},
      #{priceCollection.createUser},#{priceCollection.marketId},
      #{priceCollection.updateTime},#{priceCollection.productId},
      #{priceCollection.price},#{priceCollection.historyId},
      #{priceCollection.unit})
    </foreach>
  </insert>
  <select id="selectCollectMultiCondition" resultType="com.hywa.pricepublish.representation.PriceCollectStatisticsRep">
    SELECT
    A.name AS name,
    date_format(A.create_time,'%Y-%m-%d') AS createTime,
    date_format(A.update_time,'%Y-%m-%d') AS collectTime,
    A.create_user AS createUser,
    A.description AS description,
    A.price AS price,
    A.unit AS unit,
    P.name productName,
    M.name marketName,
    D.name priceType,
    U.name collector,
    c.name district,
    cs.name city,
    pro.name province,
    PT.name typeName,
    PTB.name bigTypeName

    FROM PRICE_COLLECTION A

    LEFT JOIN product_info P ON P.ID=A.product_id
    LEFT JOIN DICT PT ON PT.id = P.product_type_id
    LEFT JOIN DICT PTB ON PTB.id = p.product_big_type_id
    LEFT JOIN market M ON M.id = A.market_id
    LEFT JOIN county c ON c.id = M.countyId
    LEFT JOIN city cs ON cs.id = M.cityId
    LEFT JOIN province pro ON pro.id = M.provinceId
    LEFT JOIN DICT D ON D.ID=M.price_type
    LEFT JOIN user_info U ON A.create_user = U.id
    WHERE 1=1
    <if test="priceType!= null and priceType!= ''">
      AND D.id=#{priceType}
    </if>
    <if test="startTime != null and startTime != ''">
    AND  date_format(A.update_time,'%Y-%m-%d')<![CDATA[>=]]>date_format(#{startTime},'%Y-%m-%d') 
    </if>
    <if test="endTime != null and endTime != ''">
    AND  date_format(A.update_time,'%Y-%m-%d')<![CDATA[<=]]>date_format(#{endTime},'%Y-%m-%d') 
    </if>
    <if test="productNameOrMarketName!= null and productNameOrMarketName!= ''"> <!-- 联合模糊查询 -->
      AND( M.name LIKE concat('%',#{productNameOrMarketName},'%')
      or P.name LIKE concat('%',#{productNameOrMarketName},'%'))
    </if>
    ORDER BY A.update_time asc
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hywa.pricepublish.dao.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.hywa.pricepublish.dao.entity.Product">
        <id column="id" property="id" jdbcType="CHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="SMALLINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="CHAR"/>
        <result column="update_user" property="updateUser" jdbcType="CHAR"/>
        <result column="is_del" property="isDel" jdbcType="SMALLINT"/>
        <result column="enable" property="enable" jdbcType="SMALLINT"/>
        <result column="product_type_id" property="productTypeId" jdbcType="CHAR"/>
        <result column="product_big_type_id" property="productBigTypeId" jdbcType="CHAR"/>
        <result column="specification" property="specification" jdbcType="VARCHAR"/>
        <result column="unit" property="unit" jdbcType="VARCHAR"/>
        <result column="focus_on" property="focusOn" jdbcType="SMALLINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name,specification
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.hywa.pricepublish.dao.entity.ProductExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from product_info
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    update product_info
    set is_del = 1
    where id = #{id,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.hywa.pricepublish.dao.entity.ProductExample">
        delete from product_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteProductMonitor">
    update product_info set focus_on = 1 where id = #{productId}
  </delete>
    <update id="cancelMonitor">
    update product_info set focus_on = 1 where focus_on = 0;
  </update>
    <insert id="insert" parameterType="com.hywa.pricepublish.dao.entity.Product">
    insert into product_info (id, name, code, 
      description, type, create_time, 
      update_time, create_user, update_user, 
      is_del, enable, product_type_id, 
      specification, unit,product_big_type_id)
    values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=CHAR}, #{updateUser,jdbcType=CHAR}, 
      #{isDel,jdbcType=SMALLINT}, #{enable,jdbcType=SMALLINT}, #{productTypeId,jdbcType=CHAR},
      #{specification,jdbcType=VARCHAR},  #{unit,jdbcType=VARCHAR},#{productBigTypeId,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.hywa.pricepublish.dao.entity.Product">
        insert into product_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="enable != null">
                enable,
            </if>
            <if test="productTypeId != null">
                product_type_id,
            </if>
            <if test="specification != null">
                specification,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=CHAR},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=CHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=SMALLINT},
            </if>
            <if test="enable != null">
                #{enable,jdbcType=SMALLINT},
            </if>
            <if test="productTypeId != null">
                #{productTypeId,jdbcType=CHAR},
            </if>
            <if test="specification != null">
                #{specification,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hywa.pricepublish.dao.entity.ProductExample"
            resultType="java.lang.Integer">
        select count(*) from product_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectNameAndUnitById" resultType="com.hywa.pricepublish.dao.entity.Product">
      select a.name,b.name unit from product_info a left join dict b on a.unit = b.id
      where a.id = #{id}
    </select>
    <select id="findByType" resultType="com.hywa.pricepublish.dao.entity.Product">
        select a.id,a.name, a.specification,b.id unitId, b.name unit,c.id productTypeId, c.name
        productType,
        d.id productBigTypeId,d.name productBigType
        from product_info a
        left join dict b on a.unit= b.id
        left join dict c on a.product_type_id= c.id
        left join dict d on a.product_big_type_id= d.id
        where 1=1
        <if test="id != null">
            and a.id = #{id}
        </if>
        <if test="typeId != null">
            and a.product_type_id = #{typeId}
        </if>
        <if test="bigTypeId != null">
            and a.product_big_type_id = #{bigTypeId}
        </if>
        <if test="productName != null">
            and a.name LIKE concat('%',#{productName},'%')
        </if>
        and a.is_del = 0
        ORDER BY a.create_time desc
    </select>
    <select id="findById" resultType="com.hywa.pricepublish.dao.entity.Product">
        select a.id,a.name, a.specification, b.name unit from product_info a left join dict b on a.unit = b.id
    where a.id = #{productId} and a.is_del = 0
    </select>
    <select id="selectByProductName" resultType="com.hywa.pricepublish.dao.entity.Product">
        select * from product_info where name = #{productName}
        AND is_del=0
        <if test="id != null and id !=''">
            AND id != #{id}
        </if>
    </select>
    <select id="selectMonitorProducts"
            resultType="com.hywa.pricepublish.representation.ProductMonitorRep">
    select p.name,d.name type,p.focus_on,p.id
    from price_publish.product_info p left join dict d on d.id =p.product_big_type_id
    where p.focus_on = 0;
  </select>
    <select id="selectProducts" resultType="com.hywa.pricepublish.representation.ProductMonitorRep">
     select p.name,d.name type,p.focus_on,p.id
    from price_publish.product_info p left join dict d on d.id =p.product_big_type_id
  </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=CHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=SMALLINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=CHAR},
            </if>
            <if test="record.updateUser != null">
                update_user = #{record.updateUser,jdbcType=CHAR},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=SMALLINT},
            </if>
            <if test="record.enable != null">
                enable = #{record.enable,jdbcType=SMALLINT},
            </if>
            <if test="record.productTypeId != null">
                product_type_id = #{record.productTypeId,jdbcType=CHAR},
            </if>
            <if test="record.specification != null">
                specification = #{record.specification,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product_info
        set id = #{record.id,jdbcType=CHAR},
        name = #{record.name,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=SMALLINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        create_user = #{record.createUser,jdbcType=CHAR},
        update_user = #{record.updateUser,jdbcType=CHAR},
        is_del = #{record.isDel,jdbcType=SMALLINT},
        enable = #{record.enable,jdbcType=SMALLINT},
        product_type_id = #{record.productTypeId,jdbcType=CHAR},
        specification = #{record.specification,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hywa.pricepublish.dao.entity.Product">
        update product_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=CHAR},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=CHAR},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=SMALLINT},
            </if>
            <if test="enable != null">
                enable = #{enable,jdbcType=SMALLINT},
            </if>
            <if test="productTypeId != null">
                product_type_id = #{productTypeId,jdbcType=CHAR},
            </if>
            <if test="specification != null">
                specification = #{specification,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hywa.pricepublish.dao.entity.Product">
    update product_info
    set name = #{name,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=CHAR},
      product_type_id = #{productTypeId,jdbcType=CHAR},
      product_big_type_id = #{productBigTypeId,jdbcType=CHAR},
      specification = #{specification,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
    <update id="updateBatch">
        <foreach collection="list" separator=";" item="id">
            update product_info
            set focus_on = 0 where id = #{id}
            and is_del = 0
        </foreach>
    </update>
    <select id="findSellInfo" resultType="com.hywa.pricepublish.representation.SellInfoRep">
      SELECT
        product_info.name productName,
        market.name marketName,
        market.priceType priceType,
        market.province,
        market.city,
        market.county,
        (SELECT name FROM dict WHERE id=product_info.unit) unit,
        (SELECT name FROM dict WHERE id=product_info.product_big_type_id) TypeName
      FROM
        product_info
      LEFT JOIN
      (SELECT market.name name,dict.name priceType,province.name province,
        city.name city,county.name county
       FROM market LEFT JOIN dict
       ON
        dict.id=market.price_type
       LEFT JOIN
        province
       ON
        province.id=market.provinceId
       LEFT JOIN
        city
       ON
        city.id=market.cityId
       LEFT JOIN
        county
      ON
        county.id=market.countyId
      WHERE
        market.id=#{selfTemplateRep.marketId}
      ) market
      ON
        1=1
        WHERE
        product_info.id in
        <foreach collection="selfTemplateRep.productIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
  </select>
</mapper>
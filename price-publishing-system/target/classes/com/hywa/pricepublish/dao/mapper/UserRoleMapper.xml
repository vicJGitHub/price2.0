<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hywa.pricepublish.dao.mapper.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.hywa.pricepublish.dao.entity.UserRoleKey">
    <id column="user_id" property="userId" jdbcType="CHAR"/>
    <id column="role_id" property="roleId" jdbcType="CHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, role_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap"
    parameterType="com.hywa.pricepublish.dao.entity.UserRoleExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from user_ref_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.hywa.pricepublish.dao.entity.UserRoleKey">
    delete from user_ref_role
    where user_id = #{userId,jdbcType=CHAR}
      and role_id = #{roleId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hywa.pricepublish.dao.entity.UserRoleExample">
    delete from user_ref_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>

  <delete id="deleteByUserId" parameterType="java.lang.String">
      delete from user_ref_role
      where user_id = #{userId,jdbcType=CHAR}
  </delete>

  <delete id="deleteByRoleId" >
    delete from user_ref_role where role_id = #{roleId}
  </delete>

  <insert id="insert" parameterType="com.hywa.pricepublish.dao.entity.UserRoleKey">
    insert into user_ref_role (user_id, role_id)
    values (#{userId,jdbcType=CHAR}, #{roleId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hywa.pricepublish.dao.entity.UserRoleKey">
    insert into user_ref_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch">
    insert into user_ref_role (user_id, role_id)
    values
    <foreach collection="list" item="userRefRole" separator=",">
      (#{userRefRole.userId,jdbcType=CHAR}, #{userRefRole.roleId,jdbcType=CHAR})
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.hywa.pricepublish.dao.entity.UserRoleExample"
    resultType="java.lang.Integer">
    select count(*) from user_ref_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_ref_role
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_ref_role
    set user_id = #{record.userId,jdbcType=CHAR},
    role_id = #{record.roleId,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
</mapper>